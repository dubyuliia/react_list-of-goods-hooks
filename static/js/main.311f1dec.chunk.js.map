{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","sortField","setSortField","isOrderReverser","setIsOrderReversed","visibleGoods","goods","reverseOrder","prepearedGoods","sort","good1","good2","localeCompare","length","reverse","getPrepearedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkCK,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACMC,EA7BR,SAA2BC,EAA3B,GAC8C,IAA1CL,EAAyC,EAAzCA,UAAWM,EAA8B,EAA9BA,aACTC,EAAc,YAAOF,GAqBzB,OAnBIL,IACFO,EAAiBA,EAAeC,MAAK,SAACC,EAAOC,GAC3C,OAAQV,GACN,IAAK,sBACH,OAAOS,EAAME,cAAcD,GAE7B,IAAK,iBACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,OAKXN,GACFC,EAAeM,UAGVN,EAMcO,CAAkBjB,EAAiB,CACtDG,YACAM,aAAcJ,IAGhB,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAA0B,wBAAdjB,IAEdkB,QAAS,WACPjB,EAAa,wBANjB,iCAYA,wBACEe,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAA0B,mBAAdjB,IAEdkB,QAAS,WACPjB,EAAa,mBANjB,4BAYA,wBACEe,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaf,IAEfgB,QAAS,kBAAMf,GAAoBD,IALrC,qBAUCF,GAAaE,EACZ,wBACEc,KAAK,SACLD,UAAU,mBACVG,QAAS,WACPjB,EAAa,IACbE,GAAmB,IALvB,mBAUE,QAGN,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC3GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.311f1dec.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface FilterParems {\n  sortField: string;\n  reverseOrder: boolean;\n}\n\nfunction getPrepearedGoods(goods: string[],\n  { sortField, reverseOrder }: FilterParems) {\n  let prepearedGoods = [...goods];\n\n  if (sortField) {\n    prepearedGoods = prepearedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case 'Sort alphabetically':\n          return good1.localeCompare(good2);\n\n        case 'Sort by length':\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseOrder) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [isOrderReverser, setIsOrderReversed] = useState(false);\n  const visibleGoods = getPrepearedGoods(goodsFromServer, {\n    sortField,\n    reverseOrder: isOrderReverser,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== 'Sort alphabetically',\n          })}\n          onClick={() => {\n            setSortField('Sort alphabetically');\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== 'Sort by length',\n          })}\n          onClick={() => {\n            setSortField('Sort by length');\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isOrderReverser,\n          })}\n          onClick={() => setIsOrderReversed(!isOrderReverser)}\n        >\n          Reverse\n        </button>\n\n        {sortField || isOrderReverser ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={() => {\n              setSortField('');\n              setIsOrderReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        ) : null}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}